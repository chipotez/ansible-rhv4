---
- hosts: localhost
  remote_user: root
  gather_facts: True
  vars:
    - username: admin@internal
    - url: 'https://manger.dominio/ovirt-engine/api'
    - ca_file: '/etc/pki/ovirt-engine/ca.pem'
    - cluster: "cluster"
    - host_address: "xxx.xxx.xxx.xxx"
    - host_netmask: "xxx.xxx.xxx.xxx"
    - template: "base1"
    - vm: "rhel7"
    - password: 'password'
  tasks:
    - name: Asignando Variables
      block:
        - name: "Realizando autenticacion"
          no_log: true
          ovirt_auth:
            url: "{{ url }}"
            username: "{{ username }}"
            password: "{{ password }}"
            ca_file: "{{ ca_file }}"
        - name: Creando vm desde template
          ovirt_vms:
            auth: "{{ ovirt_auth }}"
            name: "{{ vm }}-{{ ansible_date_time.epoch }}"
            template: "{{ template }}"
            cluster: "{{ cluster }}"
            cloud_init:
              nic_boot_protocol: static
              nic_ip_address: "{{ host_address }}"
              nic_netmask: "{{ host_netmask }}"
              nic_name: eth0
              nic_on_boot: true
              custom_script: |
                write_files:
                 - content: |
                     BOOTPROTO=static
                     DEVICE=eth0
                     IPADDR=xxx.xxx.xxx.xxx
                     NETMASK=xxx.xxx.xxx.xxx
                     GATEWAY=xxx.xxx.xxx.xxx
                     ONBOOT=yes
                     TYPE=Ethernet
                     USERCTL=no
                     DNS1=xxx.xxx.xxx.xxx
                     DNS2=xxx.xxx.xxx.xxx
                   path: /tmp/greeting.txt
                   permissions: '0644'
              user_name: root
              root_password: super_password
          register: infra_instance_creation
        - debug: var=infra_instance_creation
        - add_host: name={{ host_address }}
                groups=created_nodes
      always:
        - name: Revocando token
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"

- hosts: created_nodes
  gather_facts: True
  remote_user: root
  vars:
    - rhn_username: rhn-user
    - rhn_pass: "rhn-password"
    - vm_hostname: "rhn-host"
  tasks:
    - name: Configurando nombre de Servidor.
      hostname:
        name: "{{ vm_hostname }}"
      register: hostname_full

    -  name: Cambiando Configuración de Red.
       shell: |
        mv /tmp/greeting.txt /etc/sysconfig/network-scripts/ifcfg-eth0

    - name: Deshabilitando Cloud-Init.
      systemd:
        name: cloud-init
        enabled: yes
        state: stopped

    - name: Eliminando Cloud-Init.
      yum:
        name: cloud-init
        state: absent

    - name: Reiniciando Red.
      systemd:
        name: network
        state: restarted
        daemon_reload: yes

    - name: Registrando Sistema Red Hat Access.
      redhat_subscription:
          state: present
          username: " {{ rhn_username }} "
          password: "{{ rhn_pass }}"
          consumer_name: "{{ vm_hostname }}"
          autosubscribe: true
          force_register: yes

    - name: Habilitando canales necesarios.
      shell: |
        subscription-manager repos --disable=*
        subscription-manager repos --enable rhel-7-server-rpms
        
    - name: Actualizando Sistema Operativo
      yum:
        name: '*'
        state: latest
        
    - name: "Limpiando repositorios."
      command: "yum clean all"

    - name: Reiniciando nodo
      shell: sleep 2 && shutdown -r now "Ansible reboot"
      async: 1
      poll: 0
      ignore_errors: true
      
    - name: Esperando conexión con servidor.
      local_action: wait_for
      args:
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
        delay: 60
        timeout: 120

